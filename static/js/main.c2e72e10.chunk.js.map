{"version":3,"sources":["pages/SensorTest.module.sass","logo.svg","pages/SensorTest.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SensorTestPage","useState","alpha","beta","gamma","orientation","setOrientation","x","y","z","accel","setAccel","position","setPosition","bindDeviceSensors","window","addEventListener","event","ea","acceleration","toFixed","useEffect","video","document","querySelector","navigator","mediaDevices","getUserMedia","facingMode","then","stream","srcObject","catch","err0r","console","log","className","s","wrapper","autoPlay","muted","playsInline","dev","onClick","DeviceMotionEvent","requestPermission","response","App","SensorTest","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,IAAM,0B,2HCD/C,I,mCC2GAC,MAvGf,WAA2B,IAAD,EAEaC,mBAAS,CAAEC,MAAO,EAAGC,KAAM,EAAGC,MAAO,IAFlD,mBAElBC,EAFkB,KAELC,EAFK,OAGCL,mBAAS,CAAEM,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAH3B,mBAGlBC,EAHkB,KAGXC,EAHW,OAIOV,mBAAS,CAAEM,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAJjC,mBAIlBG,EAJkB,KAIRC,EAJQ,KAgCzB,SAASC,IACRC,OAAOC,iBAAiB,gBAAgB,SAACC,GACxC,IAAIC,EAAKD,EAAME,aACfR,EAAS,CAAEJ,EAAGW,EAAGX,EAAEa,QAAQ,GAAIZ,EAAGU,EAAGV,EAAEY,QAAQ,GAAIX,EAAGS,EAAGT,EAAEW,QAAQ,KACnEP,EAAY,CAAEN,EAAGK,EAASL,EAAIW,EAAGX,EAAGC,EAAGI,EAASJ,EAAIU,EAAGV,EAAGC,EAAGG,EAASH,EAAIS,EAAGT,OAE9EM,OAAOC,iBAAiB,qBAAoB,SAACC,GAE5CX,EAAe,CACdJ,MAAOe,EAAMf,MAAMkB,QAAQ,GAC3BjB,KAAMc,EAAMd,KAAKiB,QAAQ,GACzBhB,MAAOa,EAAMb,MAAMgB,QAAQ,QA4B9B,OAjEAC,qBAAU,WAET,IAAIC,EAAQC,SAASC,cAAc,SAC/BC,UAAUC,cAAgBD,UAAUC,aAAaC,cACpDF,UAAUC,aAAaC,aAAa,CAAEL,MAAO,CAAEM,WAAY,iBACzDC,MAAK,SAAUC,GACfR,EAAMS,UAAYD,KAElBE,OAAM,SAAUC,GAChBC,QAAQC,IAAI,4BAIfrB,MACE,IAoDF,sBAAKsB,UAAWC,IAAEC,QAAlB,UACC,uBAAOC,UAAU,EAAMC,OAAK,EAACC,aAAa,IAC1C,sBAAKL,UAAWC,IAAEK,IAAlB,UACC,qBAAKC,QArDR,WACCC,kBAAkBC,oBAAoBhB,MAAK,SAAAiB,GAC1B,WAAZA,GAGHhC,QAgDA,wBACA,gCACC,2CACA,sCAASF,EAASL,KAClB,sCAASK,EAASJ,KAClB,sCAASI,EAASH,QAEnB,gCACC,8CACA,mDAAsBJ,EAAYH,SAClC,yDAA4BG,EAAYF,QACxC,0DAA6BE,EAAYD,YAE1C,gCACC,yCACA,uCAAWM,EAAMH,EAAI,GAAO,QAAWG,EAAMH,GAAK,GAAO,OAAS,UAClE,sCAASG,EAAMH,KACf,uCAAWG,EAAMF,EAAI,GAAO,OAAUE,EAAMF,GAAK,GAAO,OAAS,UACjE,sCAASE,EAAMF,KACf,uCAAWE,EAAMD,EAAI,GAAO,UAAaC,EAAMD,GAAK,GAAO,OAAS,UACpE,sCAASC,EAAMD,eCvFLsC,MARf,WACC,OACC,8BACC,cAACC,EAAD,OCKYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASqC,eAAe,SAM1BX,M","file":"static/js/main.c2e72e10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SensorTest_wrapper__QAJOM\",\"dev\":\"SensorTest_dev__LyKGh\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react'\n\nimport s from './SensorTest.module.sass'\n\nfunction SensorTestPage() {\n\n\tconst [orientation, setOrientation] = useState({ alpha: 0, beta: 0, gamma: 0 })\n\tconst [accel, setAccel] = useState({ x: 0, y: 0, z: 0 })\n\tconst [position, setPosition] = useState({ x: 0, y: 0, z: 0 })\n\n\tuseEffect(() => {\n\t\t// let video = document.createElement('video')\n\t\tlet video = document.querySelector('video')\n\t\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n\t\t\tnavigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" } })\n\t\t\t\t.then(function (stream) {\n\t\t\t\t\tvideo.srcObject = stream;\n\t\t\t\t})\n\t\t\t\t.catch(function (err0r) {\n\t\t\t\t\tconsole.log(\"Something went wrong!\");\n\t\t\t\t});\n\n\t\t}\n\t\tbindDeviceSensors()\n\t}, [])\n\n\tfunction getPermissions() {\n\t\tDeviceMotionEvent.requestPermission().then(response => {\n\t\t\tif (response == 'granted') {\n\t\t\t\t// Add a listener to get smartphone orientation\n\t\t\t\t// in the alpha-beta-gamma axes (units in degrees)\n\t\t\t\tbindDeviceSensors()\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction bindDeviceSensors() {\n\t\twindow.addEventListener('devicemotion', (event) => {\n\t\t\tlet ea = event.acceleration\n\t\t\tsetAccel({ x: ea.x.toFixed(2), y: ea.y.toFixed(2), z: ea.z.toFixed(2) })\n\t\t\tsetPosition({ x: position.x + ea.x, y: position.y + ea.y, z: position.z + ea.z })\n\t\t})\n\t\twindow.addEventListener('deviceorientation',(event) => {\n\t\t\t// Expose each orientation angle in a more readable way\n\t\t\tsetOrientation({\n\t\t\t\talpha: event.alpha.toFixed(2),\n\t\t\t\tbeta: event.beta.toFixed(2),\n\t\t\t\tgamma: event.gamma.toFixed(2)\n\t\t\t})\n\n\t\t\t// // Update velocity according to how tilted the phone is\n\t\t\t// // Since phones are narrower than they are long, double the increase to the x velocity\n\t\t\t// vx = vx + leftToRight_degrees * updateRate*2;\n\t\t\t// vy = vy + frontToBack_degrees * updateRate;\n\t\t\t//\n\t\t\t// // Update position and clip it to bounds\n\t\t\t// px = px + vx*.5;\n\t\t\t// if (px > 98 || px < 0){\n\t\t\t// \tpx = Math.max(0, Math.min(98, px)) // Clip px between 0-98\n\t\t\t// \tvx = 0;\n\t\t\t// }\n\t\t\t//\n\t\t\t// py = py + vy*.5;\n\t\t\t// if (py > 98 || py < 0){\n\t\t\t// \tpy = Math.max(0, Math.min(98, py)) // Clip py between 0-98\n\t\t\t// \tvy = 0;\n\t\t\t// }\n\t\t\t//\n\t\t\t// dot = document.getElementsByClassName(\"indicatorDot\")[0]\n\t\t\t// dot.setAttribute('style', \"left:\" + (px) + \"%;\" +\n\t\t\t// \t\"top:\" + (py) + \"%;\");\n\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={s.wrapper}>\n\t\t\t<video autoPlay={true} muted playsInline={true} />\n\t\t\t<div className={s.dev}>\n\t\t\t\t<div onClick={getPermissions}>Dev Stats:</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div>Position</div>\n\t\t\t\t\t<div>x: {position.x}</div>\n\t\t\t\t\t<div>y: {position.y}</div>\n\t\t\t\t\t<div>z: {position.z}</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div>Orientation</div>\n\t\t\t\t\t<div>Rotate (alpha): {orientation.alpha}</div>\n\t\t\t\t\t<div>Front to Back (beta): {orientation.beta}</div>\n\t\t\t\t\t<div>Left to Right (gamma): {orientation.gamma}</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div>Motion</div>\n\t\t\t\t\t<div>mx: {(accel.x > 0.2) ? 'right' : (accel.x < -0.2) ? 'left' : 'none'}</div>\n\t\t\t\t\t<div>x: {accel.x}</div>\n\t\t\t\t\t<div>my: {(accel.y > 0.2) ? 'jump' : (accel.y < -0.2) ? 'duck' : 'none'}</div>\n\t\t\t\t\t<div>y: {accel.y}</div>\n\t\t\t\t\t<div>mz: {(accel.z > 0.2) ? 'forward' : (accel.z < -0.2) ? 'back' : 'none'}</div>\n\t\t\t\t\t<div>z: {accel.z}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default SensorTestPage\n","import logo from './logo.svg'\nimport './App.css'\nimport SensorTestPage from \"./pages/SensorTest\"\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<SensorTestPage />\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}